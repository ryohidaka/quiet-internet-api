/* tslint:disable */
/* eslint-disable */
/**
 * しずかなインターネット API
 * - このAPIは自分の記事データを取得するために利用します。他のユーザーのデータを取得することはできません。 - APIは[プロジェクトのスポンサー](https://sizu.me/sponsors/purchase)のみが利用できます。 - 認証やレート制限などについては[GitHubリポジトリ](https://github.com/catnose99/quiet-internet-api-docs)を参照してください。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostMeta
 */
export interface PostMeta {
    /**
     * 
     * @type {string}
     * @memberof PostMeta
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PostMeta
     */
    title?: string;
    /**
     * 
     * @type {number}
     * @memberof PostMeta
     */
    bodyCharacterCount?: number;
    /**
     * 
     * @type {string}
     * @memberof PostMeta
     */
    visibility?: PostMetaVisibilityEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostMeta
     */
    tags?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof PostMeta
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PostMeta
     */
    updatedAt?: Date;
}


/**
 * @export
 */
export const PostMetaVisibilityEnum = {
    Myself: 'MYSELF',
    Anyone: 'ANYONE'
} as const;
export type PostMetaVisibilityEnum = typeof PostMetaVisibilityEnum[keyof typeof PostMetaVisibilityEnum];


/**
 * Check if a given object implements the PostMeta interface.
 */
export function instanceOfPostMeta(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostMetaFromJSON(json: any): PostMeta {
    return PostMetaFromJSONTyped(json, false);
}

export function PostMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'bodyCharacterCount': !exists(json, 'bodyCharacterCount') ? undefined : json['bodyCharacterCount'],
        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function PostMetaToJSON(value?: PostMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slug': value.slug,
        'title': value.title,
        'bodyCharacterCount': value.bodyCharacterCount,
        'visibility': value.visibility,
        'tags': value.tags,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

