/* tslint:disable */
/* eslint-disable */
/**
 * しずかなインターネット API
 * - このAPIは自分の記事データを取得するために利用します。他のユーザーのデータを取得することはできません。 - APIは[プロジェクトのスポンサー](https://sizu.me/sponsors/purchase)のみが利用できます。 - 認証やレート制限などについては[GitHubリポジトリ](https://github.com/catnose99/quiet-internet-api-docs)を参照してください。
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Pagination
 */
export interface Pagination {
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    currentPage?: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    nextPage?: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    prevPage?: number;
    /**
     * 
     * @type {number}
     * @memberof Pagination
     */
    perPage?: number;
    /**
     * 
     * @type {string}
     * @memberof Pagination
     */
    sort?: PaginationSortEnum;
    /**
     * 
     * @type {string}
     * @memberof Pagination
     */
    direction?: PaginationDirectionEnum;
}


/**
 * @export
 */
export const PaginationSortEnum = {
    Created: 'created',
    Updated: 'updated'
} as const;
export type PaginationSortEnum = typeof PaginationSortEnum[keyof typeof PaginationSortEnum];

/**
 * @export
 */
export const PaginationDirectionEnum = {
    Asc: 'asc',
    Desc: 'desc'
} as const;
export type PaginationDirectionEnum = typeof PaginationDirectionEnum[keyof typeof PaginationDirectionEnum];


/**
 * Check if a given object implements the Pagination interface.
 */
export function instanceOfPagination(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PaginationFromJSON(json: any): Pagination {
    return PaginationFromJSONTyped(json, false);
}

export function PaginationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Pagination {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'currentPage': !exists(json, 'currentPage') ? undefined : json['currentPage'],
        'nextPage': !exists(json, 'nextPage') ? undefined : json['nextPage'],
        'prevPage': !exists(json, 'prevPage') ? undefined : json['prevPage'],
        'perPage': !exists(json, 'perPage') ? undefined : json['perPage'],
        'sort': !exists(json, 'sort') ? undefined : json['sort'],
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
    };
}

export function PaginationToJSON(value?: Pagination | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'currentPage': value.currentPage,
        'nextPage': value.nextPage,
        'prevPage': value.prevPage,
        'perPage': value.perPage,
        'sort': value.sort,
        'direction': value.direction,
    };
}

